#!/bin/bash
# produckdb

# Stop on errors
set -e

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
  if [ -e var/produck.sqlite3 ]
  then
    echo "Error: database already exists"
  else
    echo "+ mkdir -p var/uploads
+ sqlite3 var/produck.sqlite3 < sql/schema.sql
+ sqlite3 var/produck.sqlite3 < sql/data.sql
+ cp sql/uploads/* var/uploads/"
    mkdir -p var/uploads
    sqlite3 var/produck.sqlite3 < sql/schema.sql
    sqlite3 var/produck.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/ 
  fi
    ;;

  "destroy")
    echo "+ rm -rf var/produck.sqlite3 var/uploads"
    rm -rf var/produck.sqlite3 var/uploads
    ;;

  "reset")
    echo "+ rm -rf var/produck.sqlite3 var/uploads
+ mkdir -p var/uploads
+ sqlite3 var/produck.sqlite3 < sql/schema.sql
+ sqlite3 var/produck.sqlite3 < sql/data.sql
+ cp sql/uploads/* var/uploads/"
    rm -rf var/produck.sqlite3 var/uploads
    mkdir -p var/uploads
    sqlite3 var/produck.sqlite3 < sql/schema.sql
    sqlite3 var/produck.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/
    ;;

  "dump")
    sqlite3 -batch -line var/produck.sqlite3 'SELECT * FROM comments'
    sqlite3 -batch -line var/produck.sqlite3 'SELECT * FROM following'
    sqlite3 -batch -line var/produck.sqlite3 'SELECT * FROM likes'
    sqlite3 -batch -line var/produck.sqlite3 'SELECT * FROM posts'
    sqlite3 -batch -line var/produck.sqlite3 'SELECT * FROM users'
    ;;
  *)
    usage
    exit 1
    ;;
esac